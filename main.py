# -*- coding: utf-8 -*-
"""python_practice_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X5H76HA_GqFCQG9P2oGrvQ6ozo4j5b-Y

# I. Змінні та памʼять.

1. Створити змінні, що посилаються на два цілих числа, що однакові за значенням, де значення належить проміжку від -5 до 256. Чи будуть ці змінні рівні тільки за значенням або ж ще будуть посилатися на один і той самий обʼєкт в памʼяті? Наведіть код та дайте текстову відповідь нижче.
"""

int_a = 1
int_b = 1
print(id(int_a),id(int_b))

"""2. Створити змінні, що посилаються на одне і те саме булеве значення. Чи будуть ці змінні рівні тільки за значенням або ж ще будуть посилатися на один і той самий обʼєкт в памʼяті? Наведіть код та дайте текстову відповідь нижче."""

boolean_a = True
boolean_b = True
print(id(boolean_a),id(boolean_b))

"""*місце для текстової відповіді або коментарів *текст курсивом*

3. За допомогою якої функції можна перевірити належність змінної до вказаного типу даних (напр. чи змінна посилається на значення булевого типу)?
"""

type(boolean_a)

"""# II. Цілі числа та числа з рухомою комою

4. Створити дві змінні, що посилаються на будь-які два цілих числа та продемонструвати такі арифметичні операції: додавання, віднімання, ділення, множення, ділення без залишку, ділення по модулю, приведення до ступеню. Всі результати операцій вивести на екран.
"""

print(int_a + int_b,int_a - int_b,int_a * int_b,int_a / int_b,int_a // int_b,int_a // int_b)

"""5. Створити дві змінні, що посилаються на будь-які два числа з рухомою комою та продемонструвати такі арифметичні операції: додавання, віднімання, ділення, множення, ділення без залишку, ділення по модулю, приведення до ступеню. Всі результати операцій вивести на екран."""

float_a = 7.1
float_b = 4.7
print(float_a + float_b,float_a - float_b,float_a * float_b,float_a / float_b,float_a // float_b,float_a // float_b)

"""6. Спробуйте проробити всі ті самі арифметичні операції над двома змінними, що посилаються на різні булеві значення. Прокоментуйте, чому, на Вашу думку, Ви отримали саме такі результати."""

boolean_a = False
boolean_b = True
print(boolean_a + boolean_b,boolean_a - boolean_b,boolean_a * boolean_b,boolean_a / boolean_b,boolean_a // boolean_b,boolean_a // boolean_b)

"""*місце для текстової відповіді або коментарів*

*   Новый пункт
*   Новый пункт

7. Використовуючи змінні з вправи 3, продемонструйте механізм явного перетворення типів, де числа з рухомою комою перетворюються на цілі числа.
"""

int(float_b)

"""# III. Робота зі списками.

8. Створити список двома різними за синтаксисом способами. За допомогою вбудованої функції обчисліть довжину одного з них.
"""

a_list = [1,2,3,4,5,6,7,8,9]
b_list = list((1,3,4,6,8,6,4))
print(len(b_list))

"""9. Створіть два списка та за допомогою спеціального методу додайте другий з них в якості останнього елемента першого."""

a_list = [1,2,3,4,5,6,7,8,9]
b_list = [1,2,3,4,5,6,7,8,9]
a_list.append(b_list)
print(a_list)

"""10. Створіть два списка та за допомогою спеціального методу "розширте" перший (додайте всі елементи другого в кінець першого списку). Напишіть, чим відрізняються методи в завданні 9 та 10."""

a_list = [1,2,3,4,5,6,7,8,9]
b_list = [1,2,3,4,5,6,7,8,9]
a_list.extend(b_list)
print(a_list)

"""*місце для відповіді*

11. Створіть список та відсортуйте його так, щоб:
а) його id залишився незмінним після сортування.
б) результат сортування був збережений у нову змінну. Підказка: для одного пункту використовуйте вбудовану функцію стортування, а в іншому - спеціальний метод для роботи зі списками.
"""

list1 = [5,9,2,10,40,21,11]
print(sorted(list1))

list2 = [5,9,2,10,40,21,11]
list3 = sorted(list2)
print(list3)

"""12. Створіть список з елементами різного типу, де деякі значення елементів повторюються. За допомогою спеціального методу порахуйте кількість значень одного з елементів на Ваш вибір. Результат виведіть на екран."""

a_new_list = ["Green,",1,"Blue",1,False,1,"Red"]
b_new_list = a_new_list.count(1)
print(b_new_list)

"""# IV. Робота з кортежами.

13. Створити список з один типом елементів та на основі цього списку створити кортеж.
"""

Last_list = [3,1,5,6,7,9]
New_list = tuple(Last_list)
print(New_list)

"""14. Створити кортеж з один елементом."""

list_new_a = (3,)
print(list_new_a)

"""15. Створити кортеж. Вивести на екран всі доступні його атрибути та методи."""

Last_list = [3,1,5,6,7,9,"Hello"]
print(dir(Last_list))

"""16. Порівняйте список та кортеж. Назвіть схожості та відмінності, випадки використання.

**місце для відповіді*

# V. Індексування та слайсинг.

17. Створіть список з 6ти елементів. Отримайте третій елемент за допомогою двох різних індексів.
"""

Last_1 = [3,1,5,6,7,9]
print(Last_1[1],Last_1[-2])

"""18. Створіть список, де елементами цього списку також є списки. Отримай перший елемент з останнього рядка та виведи значення на екран."""

New_list_1 = [[1,2,3],[4,5,6],[7,8,9]]
Last_list_1 = New_list_1[-3]
Next_list = Last_list_1[1]

print(Next_list)

"""19. Створіть кортеж, що містить 8  елементів цілочисленного типу. Виведіть на екран три найменших значення."""

Mylist_1 = (9,2,18,52,23,6,4,1)
sorted_list = sorted(Mylist_1)
print(sorted_list[:3])

"""20. Створіть список з десяти елементів різного типу. Отримайте всі елементи, окрім двох перших та двох останніх та збережіть їх в новій змінній."""

list_2 = [10,"Green",10.11,(11,12),False,"Red",17,[18,19],20]
list_3 = list_2[2:-2]
print(list_3)

"""21. Створіть кортеж з 11ти елементів чисел з рухомою комою та отримайте кожен парний за індексом елемент в зворотньому порядку. Наприклад, маючи (1.2, 2.3, 3.3, 4.3, 5.3, 6.3, 7.3, 8.3, 9.3, 0.3), отримати (0.3, 8.3, 6.3, 4.3, 2.3). Результат збережіть в нову змінну та виведіть на екран."""

float_list = (2.1,4.1,5.2,6.4,7.7,8.3,9.9,10.10,11.2,12.6)
list_b = float_list[-1::-2]

print(list_b)

"""# Вітаю! Ви велика(ий) молодець, що впоралась(вся). Похваліть себе та побалуйте чимось приємним. Я Вами пишаюся."""